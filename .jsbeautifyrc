{
    "preserve_newlines": true,
    "jsx": {
        "formatJSX": true, //Duh! that's the default 
        "attrsOnSameLineAsTag": false, // move each attribute to its own line 
        "maxAttrsOnTag": 2, // if lower or equal than 3 attributes, they will be kept on a single line 
        "firstAttributeOnSameLine": false, // keep the first attribute in the same line as the tag 
        "formatJSXExpressions": true, // default true, if false jsxExpressions won't be recursively formatted 
        "JSXExpressionsSingleLine": true, // default true, if false the JSXExpressions might span several lines 
        "alignWithFirstAttribute": false, // do not align attributes with the first tag 
        "spaceInJSXExpressionContainers": " ", // default to one space. Make it empty if you don't like spaces between JSXExpressionContainers 
        "closingTagOnNewLine": false, // default false. if true attributes on multiple lines will close the tag on a new line 
        "removeSpaceBeforeClosingJSX": false, // default false. if true <React.Something /> => <React.Something/> 
        "JSXAttributeQuotes": "", // possible values "single" or "double". Leave it as empty string if you don't want to modify the attributes' quotes 
        "htmlOptions": {
            // put here the options for js-beautify.html 
            "brace_style": "collapse",
            "indent_char": " ",
            "indent_size": 2,
            "max_preserve _newlines": 2,
            "preserve_newlines": true
            //wrap_line_length: 250 
        }
    }
}
